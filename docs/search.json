[{"path":"https://joe-chelladurai.github.io/uxr/articles/compare_benchmarks.html","id":"compare-event-with-a-benchmark","dir":"Articles","previous_headings":"","what":"Compare Event with a Benchmark","title":"Compare with Benchmarks","text":"Note: function yet released. need install development version use function. install developmental version enter console: remotes::install_github(\"joe-chelladurai/uxr\"). event “thing happens” (Oxford Learner’s Dictionary). Example: 10 14 people successfully completed task interface. probability success benchmark 80%? can use compare_benchmark_event() function answer question. function requires benchmark value, number events (case successful events), total number events. pass benchmark value 80%, ’ll need specify 0.8. event total arguments take numeric values 1 . function calculates success rates returns cumulative probability value benchmark. probability value indicates success rate use interface potential users, given representative sample.","code":"library(uxr) benchmark_event(benchmark = 0.80,                         event = 10,                         total = 12,                         event_type = \"success\",                         notes = \"minimal\") -- Compare Event Rate with a Benchmark---------------------------------------------   term           result     event              10     total              12     benchmark         80%     probability     0.442"},{"path":"https://joe-chelladurai.github.io/uxr/articles/compare_benchmarks.html","id":"compare-time-with-a-benchmark","dir":"Articles","previous_headings":"","what":"Compare Time with a Benchmark","title":"Compare with Benchmarks","text":"Note: function yet released. need install development version use function. install developmental version enter console: remotes::install_github(\"joe-chelladurai/uxr\"). Example: 7 people successfully took 60, 53, 70, 42, 62, 43, 81 seconds complete task. probability time taken complete task time 60 seconds? can use compare_benchmark_time() function answer question. function requires benchmark value list times. pass benchmark value 60s, can specify 60.","code":"benchmark_time(benchmark = 60,                        time = c(60, 53, 70, 42, 62, 43, 81),                        alpha = 0.05) -- Compare Time with a Benchmark ------------------------------------------------------------   term          t.result.     lower_ci           45.8     upper_ci           71.7     t                 0.509     probability       0.314"},{"path":"https://joe-chelladurai.github.io/uxr/articles/compare_benchmarks.html","id":"compare-score-with-a-benchmark","dir":"Articles","previous_headings":"","what":"Compare Score with a Benchmark","title":"Compare with Benchmarks","text":"Note: function yet released. need install development version use function. install developmental version enter console: remotes::install_github(\"joe-chelladurai/uxr\").","code":"data <- 68 + 17 * scale(rnorm(20)) # 68 = mean, 17 = sd benchmark_score(data, benchmark = 60, alpha = 0.5) ── Compare Score with a Benchmark ────────────────────────────────────────────────────────────── We can be 98% confident that the true score is between 60 and 76   term                result     mean                    68     sd                      17     se                3.801316     n                       20     df                      19     alpha                  0.5     probability          0.024     tail                   one     confidence           0.976     margin_of_error          8     t                    2.105     lower_ci                60     upper_ci                76"},{"path":"https://joe-chelladurai.github.io/uxr/articles/compare_means.html","id":"compare-means-within-groups","dir":"Articles","previous_headings":"","what":"Compare Means Within Groups","title":"Compare Means","text":"uses paired t-test.","code":"# Example data data <- data.frame(id = c(1:7),            task1 = c(4, 1, 2, 3, 8, 4, 4),            task2 = c(7, 13, 9, 7, 18, 8, 10))  data    id task1 task2 1  1     4     7 2  2     1    13 3  3     2     9 4  4     3     7 5  5     8    18 6  6     4     8 7  7     4    10 compare_means_within_groups(data$task1, data$task2) ── Compare Means Within Groups ────────────────────────────────────────────────────────────────────   X.                result.estimate     mean.difference         -6.571429     t                           -5.18     p                           0.002     df                              6     ci_level                     0.95     lower_ci                    -9.68     upper_ci                    -3.46"},{"path":[]},{"path":"https://joe-chelladurai.github.io/uxr/articles/compare_means.html","id":"welsch-test","dir":"Articles","previous_headings":"Compare Means Between Groups","what":"Welsch Test","title":"Compare Means","text":"","code":"data <- tibble::tribble(~old, ~new,                 18, 12,                 44, 35,                  35, 21,                 78, 9,                 38, 2,                  18, 10,                 16, 5,                 22, 38,                 40, 30,                 77, NA,                 20, NA)  data2 <- data |>    tidyr::pivot_longer(cols = everything(), names_to = \"group\", values_to = \"value\") compare_means_between_groups(data2, value, group, c(\"old\", \"new\"), equal_variances = FALSE) ── Welch Two Sample t-test ─────────────────────────────────────────────────────────────────────────────────   X.                  result.estimate     mean.in.group.new                18     mean.in.group.old          36.90909     t                             -2.33     p                             0.033     df                          16.7007     ci_level                       0.95     lower_ci                     -36.04     upper_ci                      -1.78"},{"path":"https://joe-chelladurai.github.io/uxr/articles/compare_rates.html","id":"compare-rates-between-groups","dir":"Articles","previous_headings":"","what":"Compare Rates Between Groups","title":"Compare Rates","text":"","code":"design = c(\"A\",\"B\") complete = c(37, 22) incomplete = c(418, 416) data <- data.frame(design, complete, incomplete) data <- data |> pivot_longer(!design, names_to = \"rate\", values_to = \"n\") |>  tidyr::uncount(n) test_n_1_prop(data, design, rate, z = 1.645)  #> $a #> [1] 0.03109037 #>  #> $b #> [1] 0.9994399 #>  #> $c #> [1] 0.06170426 #>  #> $d #> [1] 0.004480907 #>  #> $den #> [1] 0.01662802 #>  #> $num #> [1] 0.03107296 #>  #> $z #> [1] 1.868711 #>  #> $p_value #> [1] 0.06166309 #>  #> $n #> [1] 893 #>  #> $lower_ci #> [1] 0.003549119 #>  #> $upper_ci #> [1] 0.05834407"},{"path":"https://joe-chelladurai.github.io/uxr/articles/compare_rates.html","id":"compare-rates-within-groups","dir":"Articles","previous_headings":"","what":"Compare Rates Within Groups","title":"Compare Rates","text":"","code":"A <- c(1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1) B <- c(0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0)  data <- data.frame(A, B) compare_rates_within_groups(data, A, B) #> # A tibble: 1 × 3 #>   p_value lower_ci upper_ci #>     <dbl>    <dbl>    <dbl> #> 1   0.125 0.000563    0.590"},{"path":"https://joe-chelladurai.github.io/uxr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joe Chelladurai. Author, maintainer.","code":""},{"path":"https://joe-chelladurai.github.io/uxr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Chelladurai J (2022). uxr: User Experience Research. R package version 0.1.2.","code":"@Manual{,   title = {uxr: User Experience Research},   author = {Joe Chelladurai},   year = {2022},   note = {R package version 0.1.2}, }"},{"path":"https://joe-chelladurai.github.io/uxr/index.html","id":"quantitative-user-experience-ux-research-in-r","dir":"","previous_headings":"","what":"User Experience Research","title":"User Experience Research","text":"purpose package provide convenience functions user experience research. Particularly, package focuses quantitative user experience testing reporting.","code":""},{"path":"https://joe-chelladurai.github.io/uxr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"User Experience Research","text":"Please note package early development breaking changes. can install package directly CRAN using: install development version, use:","code":"install.packages(\"uxr\") remotes::install_github(\"joe-chelladurai/uxr\")"},{"path":"https://joe-chelladurai.github.io/uxr/index.html","id":"available-functions","dir":"","previous_headings":"","what":"Available functions","title":"User Experience Research","text":"Published CRAN adjusted_wald_ci wald test benchmark_comparison task_completion mean_ci mean_ci_2 Development Version benchmark_event benchmark_time benchmark_score get_concordant_discordant_pairs test_t test_t_paired test_mcnemar test_fisher test_n_1_prop test_wald test_wald_adj compare_means_within_groups - two-sample t-test (Welsh/Student) compare_means_between_groups - paired t-test compare_rates_within_groups - mcnemar exact test compare_rates_between_groups - n-1 two proportion test","code":""},{"path":"https://joe-chelladurai.github.io/uxr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 uxr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/benchmark_event.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare Probability of an Event with Benchmark — benchmark_event","title":"Compare Probability of an Event with Benchmark — benchmark_event","text":"Compare Probability Event Benchmark","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/benchmark_event.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare Probability of an Event with Benchmark — benchmark_event","text":"","code":"benchmark_event(   benchmark,   event,   total,   event_type = \"\",   notes = c(\"minimal\", \"technical\") )"},{"path":"https://joe-chelladurai.github.io/uxr/reference/benchmark_event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare Probability of an Event with Benchmark — benchmark_event","text":"benchmark benchmark event event total total event_type Optional: string describing type event. example, success, failure, etc. notes whether output contain minimal, technical, executive type notes.","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/benchmark_event.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare Probability of an Event with Benchmark — benchmark_event","text":"list event rate, probability, notes","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/benchmark_event.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare Probability of an Event with Benchmark — benchmark_event","text":"","code":"benchmark_event(benchmark = 0.7,                      event = 10,                      total = 12,                      event_type = \"success\",                      notes = \"minimal\") #>  #> ── Compare Event Rate with a Benchmark ───────────────────────────────────────── #> Based on the success rate of 84%, the probability that this rate exceeds a #> benchmark of 70% is 75% #>   term           result   #>   event              10   #>   total              12   #>   benchmark         70%   #>   probability     0.747"},{"path":"https://joe-chelladurai.github.io/uxr/reference/benchmark_score.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare Score with a Benchmark — benchmark_score","title":"Compare Score with a Benchmark — benchmark_score","text":"Compare Score Benchmark","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/benchmark_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare Score with a Benchmark — benchmark_score","text":"","code":"benchmark_score(data, benchmark, alpha, tail = \"one\", remove_missing = TRUE)"},{"path":"https://joe-chelladurai.github.io/uxr/reference/benchmark_score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare Score with a Benchmark — benchmark_score","text":"data column vector scores benchmark benchmark alpha alpha tail one-tailed two-tailed test remove_missing TRUE/FALSE remove missing values? (default TRUE)","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/benchmark_score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare Score with a Benchmark — benchmark_score","text":"lower_ci, upper_ci, t, probability","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/benchmark_score.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare Score with a Benchmark — benchmark_score","text":"","code":"data <- 68 + 17 * scale(rnorm(20)) # 68 = mean, 17 = sd benchmark_score(data, benchmark = 60, alpha = 0.5) #>  #> ── Compare Score with a Benchmark ────────────────────────────────────────────── #> We can be 98% confident that the true score is between 60 and 76 #>   term                result   #>   mean                    68   #>   sd                      17   #>   se                3.801316   #>   n                       20   #>   df                      19   #>   alpha                  0.5   #>   probability          0.024   #>   tail                   one   #>   confidence           0.976   #>   margin_of_error          8   #>   t                    2.105   #>   lower_ci                60   #>   upper_ci                76"},{"path":"https://joe-chelladurai.github.io/uxr/reference/benchmark_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare Time with a Benchmark — benchmark_time","title":"Compare Time with a Benchmark — benchmark_time","text":"Compare Time Benchmark","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/benchmark_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare Time with a Benchmark — benchmark_time","text":"","code":"benchmark_time(benchmark, time, alpha, remove_missing = FALSE)"},{"path":"https://joe-chelladurai.github.io/uxr/reference/benchmark_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare Time with a Benchmark — benchmark_time","text":"benchmark benchmark time column vector time values alpha alpha remove_missing TRUE/FALSE remove missing values?","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/benchmark_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare Time with a Benchmark — benchmark_time","text":"lower_ci, upper_ci, t, probability","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/benchmark_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare Time with a Benchmark — benchmark_time","text":"","code":"benchmark_time(time = c(60, 53, 70, 42, 62, 43, 81),                        benchmark = 60,                        alpha = 0.05) #>  #> ── Compare Time with a Benchmark ─────────────────────────────────────────────── #>   term          t.result.   #>   lower_ci           45.8   #>   upper_ci           71.7   #>   t                 0.509   #>   probability       0.314"},{"path":"https://joe-chelladurai.github.io/uxr/reference/compare_means_between_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare Means Between Groups — compare_means_between_groups","title":"Compare Means Between Groups — compare_means_between_groups","text":"Compare Means Groups","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/compare_means_between_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare Means Between Groups — compare_means_between_groups","text":"","code":"compare_means_between_groups(   data,   variable,   grouping_variable,   groups,   equal_variances = FALSE )"},{"path":"https://joe-chelladurai.github.io/uxr/reference/compare_means_between_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare Means Between Groups — compare_means_between_groups","text":"data data variable variable grouping_variable Group groups Specify groups grouping variable equal_variances Specify whether variances equal (TRUE/FALSE)","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/compare_means_between_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare Means Between Groups — compare_means_between_groups","text":"results","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/compare_means_between_groups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare Means Between Groups — compare_means_between_groups","text":"","code":"compare_means_between_groups(mtcars, mpg, cyl, c(4, 6)) #>  #> ── Welch Two Sample t-test ───────────────────────────────────────────────────── #>   X.                result.estimate   #>   mean.in.group.4          26.66364   #>   mean.in.group.6          19.74286   #>   t                            4.72   #>   p                          <0.001   #>   df                             13   #>   ci_level                     0.95   #>   lower_ci                     3.75   #>   upper_ci                    10.09"},{"path":"https://joe-chelladurai.github.io/uxr/reference/compare_means_within_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare Means Within Groups — compare_means_within_groups","title":"Compare Means Within Groups — compare_means_within_groups","text":"Compare Means Within Groups","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/compare_means_within_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare Means Within Groups — compare_means_within_groups","text":"","code":"compare_means_within_groups(x, y, ...)"},{"path":"https://joe-chelladurai.github.io/uxr/reference/compare_means_within_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare Means Within Groups — compare_means_within_groups","text":"x x y y ... arguments passed paired t-test","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/compare_means_within_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare Means Within Groups — compare_means_within_groups","text":"results","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/compare_rates_between_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare Rates Between Groups — compare_rates_between_groups","title":"Compare Rates Between Groups — compare_rates_between_groups","text":"Compare Rates Groups","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/compare_rates_between_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare Rates Between Groups — compare_rates_between_groups","text":"","code":"compare_rates_between_groups(data, x, y, test)"},{"path":"https://joe-chelladurai.github.io/uxr/reference/compare_rates_between_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare Rates Between Groups — compare_rates_between_groups","text":"data data x var 1 y var 2 test Type test (fisher, n-1 two prop)","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/compare_rates_between_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare Rates Between Groups — compare_rates_between_groups","text":"results","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/compare_rates_within_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare Rates Within Groups — compare_rates_within_groups","title":"Compare Rates Within Groups — compare_rates_within_groups","text":"Compare Rates Within Groups","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/compare_rates_within_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare Rates Within Groups — compare_rates_within_groups","text":"","code":"compare_rates_within_groups(data, x, y, z = 1.96)"},{"path":"https://joe-chelladurai.github.io/uxr/reference/compare_rates_within_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare Rates Within Groups — compare_rates_within_groups","text":"data data x var 1 y var 2 z value","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/compare_rates_within_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare Rates Within Groups — compare_rates_within_groups","text":"results","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/compare_rates_within_groups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare Rates Within Groups — compare_rates_within_groups","text":"","code":"A <- c(1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1) B <- c(0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0) data <- data.frame(A, B)"},{"path":"https://joe-chelladurai.github.io/uxr/reference/dist_t.html","id":null,"dir":"Reference","previous_headings":"","what":"T Distribution — dist_t","title":"T Distribution — dist_t","text":"T Distribution","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/dist_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"T Distribution — dist_t","text":"","code":"dist_t(t, df, tail)"},{"path":"https://joe-chelladurai.github.io/uxr/reference/dist_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"T Distribution — dist_t","text":"t t df degrees freedom tail 'one' 'two'","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/dist_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"T Distribution — dist_t","text":"value","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/dist_t.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"T Distribution — dist_t","text":"","code":"dist_t(1.4, 2, \"one\") #> [1] 0.1482368 dist_t(1.4, 2, \"two\") #> [1] 0.2964735"},{"path":"https://joe-chelladurai.github.io/uxr/reference/get_concordant_discordant_pairs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get concordant and discordant pairs for two variables — get_concordant_discordant_pairs","title":"Get concordant and discordant pairs for two variables — get_concordant_discordant_pairs","text":"Get concordant discordant pairs two variables","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/get_concordant_discordant_pairs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get concordant and discordant pairs for two variables — get_concordant_discordant_pairs","text":"","code":"get_concordant_discordant_pairs(data, x, y)"},{"path":"https://joe-chelladurai.github.io/uxr/reference/get_concordant_discordant_pairs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get concordant and discordant pairs for two variables — get_concordant_discordant_pairs","text":"data = data x variable 1 y variable 2","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/get_concordant_discordant_pairs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get concordant and discordant pairs for two variables — get_concordant_discordant_pairs","text":"data frame","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/get_concordant_discordant_pairs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get concordant and discordant pairs for two variables — get_concordant_discordant_pairs","text":"","code":"mtcars$id <- seq.int(nrow(mtcars)) get_concordant_discordant_pairs(mtcars, x = vs, y = am) #> # A tibble: 4 × 3 #>   pairs     n type                        #>   <chr> <int> <chr>                       #> 1 a         7 concordant: vs = 1 & am = 1 #> 2 b         7 discordant: vs = 1 & am = 0 #> 3 c         6 discordant: vs = 0 & am = 1 #> 4 d        12 concordant: vs = 0 & am = 0"},{"path":"https://joe-chelladurai.github.io/uxr/reference/get_confidence_intervals_event.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Confidence Intervals for Event Rate — get_confidence_intervals_event","title":"Get Confidence Intervals for Event Rate — get_confidence_intervals_event","text":"Get Confidence Intervals Event Rate","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/get_confidence_intervals_event.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Confidence Intervals for Event Rate — get_confidence_intervals_event","text":"","code":"get_confidence_intervals_event(event, total, confidence_level)"},{"path":"https://joe-chelladurai.github.io/uxr/reference/get_confidence_intervals_event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Confidence Intervals for Event Rate — get_confidence_intervals_event","text":"event event total total confidence_level confidence level z value","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/get_confidence_intervals_event.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Confidence Intervals for Event Rate — get_confidence_intervals_event","text":"lower_ci, upper_ci","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/get_confidence_intervals_event.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Confidence Intervals for Event Rate — get_confidence_intervals_event","text":"","code":"get_confidence_intervals_event(event = 80,                                total = 100,                                confidence_level = 1.96) #> $lower_ci #> [1] 0.7104394 #>  #> $upper_ci #> [1] 0.8673637 #>"},{"path":"https://joe-chelladurai.github.io/uxr/reference/get_confidence_intervals_within_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Confidence Intervals Within Groups — get_confidence_intervals_within_groups","title":"Get Confidence Intervals Within Groups — get_confidence_intervals_within_groups","text":"Get Confidence Intervals Within Groups","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/get_confidence_intervals_within_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Confidence Intervals Within Groups — get_confidence_intervals_within_groups","text":"","code":"get_confidence_intervals_within_groups(data, x, y, z = 1.96)"},{"path":"https://joe-chelladurai.github.io/uxr/reference/get_confidence_intervals_within_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Confidence Intervals Within Groups — get_confidence_intervals_within_groups","text":"data data x var 1 y var 2 z value","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/get_confidence_intervals_within_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Confidence Intervals Within Groups — get_confidence_intervals_within_groups","text":"results","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/get_confidence_intervals_within_groups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Confidence Intervals Within Groups — get_confidence_intervals_within_groups","text":"","code":"A <- c(1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1) B <- c(0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0) data <- data.frame(A, B) get_confidence_intervals_within_groups(data, A, B) #>       lower_ci  upper_ci #> 1 0.0005630508 0.5904256"},{"path":"https://joe-chelladurai.github.io/uxr/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://joe-chelladurai.github.io/uxr/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/sample_xy.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample XY - Example Dataset — sample_xy","title":"Sample XY - Example Dataset — sample_xy","text":"Example data two variables uniform distribution","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/sample_xy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample XY - Example Dataset — sample_xy","text":"","code":"sample_xy"},{"path":[]},{"path":"https://joe-chelladurai.github.io/uxr/reference/sample_xy.html","id":"sample-xy","dir":"Reference","previous_headings":"","what":"sample_xy","title":"Sample XY - Example Dataset — sample_xy","text":"data frame 100 rows 2 columns: x Column x y Column y","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/stat_mean_ci.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean Confidence Intervals — stat_mean_ci","title":"Mean Confidence Intervals — stat_mean_ci","text":"Mean Confidence Intervals","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/stat_mean_ci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean Confidence Intervals — stat_mean_ci","text":"","code":"stat_mean_ci(x, alpha)"},{"path":"https://joe-chelladurai.github.io/uxr/reference/stat_mean_ci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean Confidence Intervals — stat_mean_ci","text":"x values alpha alpha","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/stat_mean_ci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mean Confidence Intervals — stat_mean_ci","text":"lower_ci, upper_ci","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/stat_mean_ci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mean Confidence Intervals — stat_mean_ci","text":"","code":"stat_mean_ci(c(1, 2, 3, 4, 5, 6, 7), 1.96) #> $lower_ci #> [1] 7 #>  #> $upper_ci #> [1] 2 #>  stat_mean_ci(c(2, 4, 6, 8), 1.96) #> $lower_ci #> [1] 13 #>  #> $upper_ci #> [1] 2 #>"},{"path":"https://joe-chelladurai.github.io/uxr/reference/stat_mean_ci_2.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean Confidence Intervals (Large Samples) — stat_mean_ci_2","title":"Mean Confidence Intervals (Large Samples) — stat_mean_ci_2","text":"Mean Confidence Intervals (Large Samples)","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/stat_mean_ci_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean Confidence Intervals (Large Samples) — stat_mean_ci_2","text":"","code":"stat_mean_ci_2(x, z)"},{"path":"https://joe-chelladurai.github.io/uxr/reference/stat_mean_ci_2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean Confidence Intervals (Large Samples) — stat_mean_ci_2","text":"x values z z value","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/stat_mean_ci_2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mean Confidence Intervals (Large Samples) — stat_mean_ci_2","text":"lower_ci, upper_ci","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/stat_mean_ci_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mean Confidence Intervals (Large Samples) — stat_mean_ci_2","text":"","code":"stat_mean_ci_2(c(1, 2, 3, 4, 5, 6, 7), 1.96) #> $lower_ci #> [1] 1 #>  #> $median #> [1] 4 #>  #> $upper_ci #> [1] 7 #>  stat_mean_ci_2(c(2, 4, 6, 8), 1.96) #> $lower_ci #> [1] 2 #>  #> $median #> [1] 5 #>  #> $upper_ci #> [1] 8 #>"},{"path":"https://joe-chelladurai.github.io/uxr/reference/table_observed_expected.html","id":null,"dir":"Reference","previous_headings":"","what":"Observed Expected Table — table_observed_expected","title":"Observed Expected Table — table_observed_expected","text":"Observed Expected Table","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/table_observed_expected.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Observed Expected Table — table_observed_expected","text":"","code":"table_observed_expected(data, x, y)"},{"path":"https://joe-chelladurai.github.io/uxr/reference/table_observed_expected.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Observed Expected Table — table_observed_expected","text":"data data x x y y","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/table_observed_expected.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Observed Expected Table — table_observed_expected","text":"results","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_chisq_one.html","id":null,"dir":"Reference","previous_headings":"","what":"Chi-squared One Sample — test_chisq_one","title":"Chi-squared One Sample — test_chisq_one","text":"Chi-squared One Sample","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_chisq_one.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chi-squared One Sample — test_chisq_one","text":"","code":"test_chisq_one(data, x)"},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_chisq_one.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Chi-squared One Sample — test_chisq_one","text":"data data x x","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_chisq_one.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Chi-squared One Sample — test_chisq_one","text":"results","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_chisq_one.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Chi-squared One Sample — test_chisq_one","text":"","code":"data <- tibble::tribble(~fruit, ~count,                         \"Apple\"          , 29,                         \"Banana\"         , 24,                         \"Cucumber\"       , 22,                         \"Dragon Fruit\"   , 19                         )  data <- data |>   tidyr::uncount(weights = count) |>   tibble::rowid_to_column(\"id\")  test_chisq_one(data, fruit) #> # A tibble: 1 × 1 #>   chi_sq #>    <dbl> #> 1   2.26"},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_chisq_two.html","id":null,"dir":"Reference","previous_headings":"","what":"Chi-squared Two Sample — test_chisq_two","title":"Chi-squared Two Sample — test_chisq_two","text":"Chi-squared Two Sample","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_chisq_two.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chi-squared Two Sample — test_chisq_two","text":"","code":"test_chisq_two(data, x, y)"},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_chisq_two.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Chi-squared Two Sample — test_chisq_two","text":"data data x x y y","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_chisq_two.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Chi-squared Two Sample — test_chisq_two","text":"results","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_chisq_two.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Chi-squared Two Sample — test_chisq_two","text":"","code":"data <- tibble::tribble(~fruit, ~count,                         \"Apple\"          , 29,                         \"Banana\"         , 24,                         \"Cucumber\"       , 22,                         \"Dragon Fruit\"   , 19                         )  data <- data |>   tidyr::uncount(weights = count) |>   tibble::rowid_to_column(\"id\")  test_chisq_one(data, fruit) #> # A tibble: 1 × 1 #>   chi_sq #>    <dbl> #> 1   2.26"},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_fisher.html","id":null,"dir":"Reference","previous_headings":"","what":"Fisher's Test — test_fisher","title":"Fisher's Test — test_fisher","text":"Fisher's Test","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_fisher.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fisher's Test — test_fisher","text":"","code":"test_fisher(data, x, y)"},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_fisher.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fisher's Test — test_fisher","text":"data data x x y y","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_fisher.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fisher's Test — test_fisher","text":"results","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_fisher.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fisher's Test — test_fisher","text":"","code":"design = c(\"A\",\"B\") complete = c(11, 5) incomplete = c(1, 5) data <- data.frame(design, complete, incomplete) data <- data |> tidyr::pivot_longer(!design, names_to = \"rate\", values_to = \"n\") |>   tidyr::uncount(n) test_fisher(data, design, rate) #>      p_value odds_ratio #> 1 0.05572755   9.759687"},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_mcnemar.html","id":null,"dir":"Reference","previous_headings":"","what":"McNemar Test — test_mcnemar","title":"McNemar Test — test_mcnemar","text":"McNemar Test","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_mcnemar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"McNemar Test — test_mcnemar","text":"","code":"test_mcnemar(data, x, y)"},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_mcnemar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"McNemar Test — test_mcnemar","text":"data data x var 1 y var 2","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_mcnemar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"McNemar Test — test_mcnemar","text":"results","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_mcnemar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"McNemar Test — test_mcnemar","text":"","code":"A <- c(1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1) B <- c(0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0) data <- data.frame(A, B) test_mcnemar(data, A, B) #> [1] 0.125"},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_n_1_prop.html","id":null,"dir":"Reference","previous_headings":"","what":"N-1 Two Proportions Test — test_n_1_prop","title":"N-1 Two Proportions Test — test_n_1_prop","text":"N-1 Two Proportions Test","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_n_1_prop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"N-1 Two Proportions Test — test_n_1_prop","text":"","code":"test_n_1_prop(data, x, y, z = 1.96)"},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_n_1_prop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"N-1 Two Proportions Test — test_n_1_prop","text":"data data x x y y z z","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_n_1_prop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"N-1 Two Proportions Test — test_n_1_prop","text":"results","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_n_1_prop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"N-1 Two Proportions Test — test_n_1_prop","text":"","code":"design = c(\"A\",\"B\") complete = c(37, 22) incomplete = c(418, 416) data <- data.frame(design, complete, incomplete) data <- data |> tidyr::pivot_longer(!design, names_to = \"rate\", values_to = \"n\") |>   tidyr::uncount(n) test_n_1_prop(data, design, rate, z = 1.645) #> $a #> [1] 0.03109037 #>  #> $b #> [1] 0.9994399 #>  #> $c #> [1] 0.06170426 #>  #> $d #> [1] 0.004480907 #>  #> $den #> [1] 0.01662802 #>  #> $num #> [1] 0.03107296 #>  #> $z #> [1] 1.868711 #>  #> $p_value #> [1] 0.06166309 #>  #> $n #> [1] 893 #>  #> $lower_ci #> [1] 0.003549119 #>  #> $upper_ci #> [1] 0.05834407 #>"},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_n_1_two_prop.html","id":null,"dir":"Reference","previous_headings":"","what":"N-1 Two Proportions Test — test_n_1_two_prop","title":"N-1 Two Proportions Test — test_n_1_two_prop","text":"N-1 Two Proportions Test","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_n_1_two_prop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"N-1 Two Proportions Test — test_n_1_two_prop","text":"","code":"test_n_1_two_prop(data, x, y, value, z)"},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_n_1_two_prop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"N-1 Two Proportions Test — test_n_1_two_prop","text":"data data x x y y value value z z","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_n_1_two_prop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"N-1 Two Proportions Test — test_n_1_two_prop","text":"results","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_t.html","id":null,"dir":"Reference","previous_headings":"","what":"T-test — test_t","title":"T-test — test_t","text":"T-test","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"T-test — test_t","text":"","code":"test_t(x, y, ...)"},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"T-test — test_t","text":"x x y y ... arguments passed t-test","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"T-test — test_t","text":"results","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_t.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"T-test — test_t","text":"","code":"test_t(mtcars$mpg, mtcars$am) #>  #> ── Welch Two Sample t-test ───────────────────────────────────────────────────── #>   X.         result.estimate   #>   mpg               20.09062   #>   am                 0.40625   #>   t                    18.41   #>   p                   <0.001   #>   df                      31   #>   ci_level              0.95   #>   lower_ci             17.51   #>   upper_ci             21.86"},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_t_paired.html","id":null,"dir":"Reference","previous_headings":"","what":"Paired t-test — test_t_paired","title":"Paired t-test — test_t_paired","text":"Paired t-test","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_t_paired.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Paired t-test — test_t_paired","text":"","code":"test_t_paired(x, y, ...)"},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_t_paired.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Paired t-test — test_t_paired","text":"x x y y ... arguments passed paired t-test","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_t_paired.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Paired t-test — test_t_paired","text":"results","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_wald.html","id":null,"dir":"Reference","previous_headings":"","what":"Wald Confidence Intervals — test_wald","title":"Wald Confidence Intervals — test_wald","text":"Wald Confidence Intervals","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_wald.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wald Confidence Intervals — test_wald","text":"","code":"test_wald(success, total, ci_z)"},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_wald.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wald Confidence Intervals — test_wald","text":"success success total total ci_z z value","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_wald.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wald Confidence Intervals — test_wald","text":"lower_ci, upper_ci","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_wald.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wald Confidence Intervals — test_wald","text":"","code":"test_wald(10, 12, 1.96) #> $lower_ci #> [1] 0.6224709 #>  #> $upper_ci #> [1] 1.044196 #>  test_wald(5, 7, 1.96) #> $lower_ci #> [1] 0.3796217 #>  #> $upper_ci #> [1] 1.04895 #>"},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_wald_adj.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjusted Wald Confidence Intervals — test_wald_adj","title":"Adjusted Wald Confidence Intervals — test_wald_adj","text":"Adjusted Wald Confidence Intervals","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_wald_adj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjusted Wald Confidence Intervals — test_wald_adj","text":"","code":"test_wald_adj(success, total, ci_z)"},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_wald_adj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjusted Wald Confidence Intervals — test_wald_adj","text":"success success total total ci_z z value","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_wald_adj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjusted Wald Confidence Intervals — test_wald_adj","text":"lower_ci, upper_ci","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/test_wald_adj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjusted Wald Confidence Intervals — test_wald_adj","text":"","code":"test_wald_adj(10, 12, 1.96) #> $lower_ci #> [1] 0.5405048 #>  #> $upper_ci #> [1] 0.9644947 #>  test_wald_adj(5, 7, 1.96) #> $lower_ci #> [1] 0.3533743 #>  #> $upper_ci #> [1] 0.9233376 #>"},{"path":"https://joe-chelladurai.github.io/uxr/reference/uxr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"uxr: User Experience Research — uxr-package","title":"uxr: User Experience Research — uxr-package","text":"Provides convenience functions user experience research emphasis quantitative user experience testing reporting. functions designed translate statistical approaches applied user experience research.","code":""},{"path":"https://joe-chelladurai.github.io/uxr/reference/uxr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"uxr: User Experience Research — uxr-package","text":"Maintainer: Joe Chelladurai joe.chelladurai@outlook.com (ORCID)","code":""},{"path":"https://joe-chelladurai.github.io/uxr/release-notes.html","id":"release-notes","dir":"","previous_headings":"","what":"Release Notes","title":"NA","text":"Added task_times_benchmark","code":""}]
